/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class pcl_PointCloudRGB */

#ifndef _Included_pcl_PointCloudRGB
#define _Included_pcl_PointCloudRGB
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     pcl_PointCloudRGB
 * Method:    isOrganized
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_pcl_PointCloudRGB_isOrganized
  (JNIEnv *, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    alloc
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_alloc
  (JNIEnv *, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_dispose
  (JNIEnv *, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    clone
 * Signature: (Lpcl/PointCloud;)V
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_clone
  (JNIEnv *, jobject, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    size
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_pcl_PointCloudRGB_size
  (JNIEnv *, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    add
 * Signature: (Lpcl/PointXYZRGB;)V
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_add
  (JNIEnv *, jobject, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    remove
 * Signature: (Lpcl/PointXYZRGB;)V
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_remove
  (JNIEnv *, jobject, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    clear
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_clear
  (JNIEnv *, jobject);

/*
 * Class:     pcl_PointCloudRGB
 * Method:    nGet
 * Signature: (I)J
 */
JNIEXPORT void JNICALL Java_pcl_PointCloudRGB_nGet
  (JNIEnv *, jobject, jint, jobject);

#ifdef __cplusplus
}
#endif
#endif
